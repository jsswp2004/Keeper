{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsswp\\\\github\\\\keeper\\\\src\\\\components\\\\InputArea.jsx\";\nimport React, { useState } from \"react\";\n\nfunction InputArea(props) {\n  function handleChange(event) {\n    var newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  /*#__PURE__*/\n  React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"text\",\n    value: inputText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n}\n\n_c = InputArea;\nexport default InputArea; // <input onChange={handleChange} type=\"text\" value={inputText} />\n// onClick={() => {\n//   props.addOn(inputText);\n//   setInputText(\"\");\n// }}\n//   const [inputText, setInputText] = useState(\"\");\n// function handleChange(event) {\n//   const newValue = event.target.value;\n//   setInputText(newValue);\n// }\n// <input type=\"text\"/>\n\nvar _c;\n\n$RefreshReg$(_c, \"InputArea\");","map":{"version":3,"names":["React","useState","InputArea","props","handleChange","event","newValue","target","value","setInputText","inputText"],"sources":["C:/Users/jsswp/github/keeper/src/components/InputArea.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction InputArea(props) {\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  <input onChange={handleChange} type=\"text\" value={inputText} />\r\n\r\n  return (\r\n    <div className=\"form\">\r\n\r\n\r\n      <button\r\n\r\n      >\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default InputArea;\r\n// <input onChange={handleChange} type=\"text\" value={inputText} />\r\n\r\n// onClick={() => {\r\n//   props.addOn(inputText);\r\n//   setInputText(\"\");\r\n// }}\r\n\r\n//   const [inputText, setInputText] = useState(\"\");\r\n\r\n\r\n  // function handleChange(event) {\r\n  //   const newValue = event.target.value;\r\n  //   setInputText(newValue);\r\n  // }\r\n// <input type=\"text\"/>\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAExB,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B;IACAC,YAAY,CAACH,QAAD,CAAZ;EACD;;EAED;EAAA;IAAO,QAAQ,EAAEF,YAAjB;IAA+B,IAAI,EAAC,MAApC;IAA2C,KAAK,EAAEM,SAAlD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA;EAEA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAHF,CAHF,CADF;AAYD;;KArBQR,S;AAsBT,eAAeA,SAAf,C,CACA;AAEA;AACA;AACA;AACA;AAEA;AAGE;AACA;AACA;AACA;AACF"},"metadata":{},"sourceType":"module"}